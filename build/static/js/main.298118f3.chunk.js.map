{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Sign/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Header/index.js","components/Sign/SignUp/index.js","components/Password/PasswordForget/index.js","components/Sign/SignIn/index.js","components/TweetPage/TweetItem.js","components/TweetPage/TweetList.js","components/TweetPage/TweetInput.js","components/TweetPage/TweetPage.js","components/TweetPage/index.js","components/User/UserList.js","components/User/UserCard.js","components/Home/index.js","components/Account/userAccout.js","components/Account/index.js","components/ListeDesAmis/index.js","components/Landing/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","snapshot","dbUser","val","objectSpread","emailVerified","db","ref","concat","users","message","id","messages","tweet","tweets","image","storage","images","app","initializeApp","serverValue","database","ServerValue","_ref","className","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","style","float","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Header","components_Navigation","INITIAL_STATE","username","name","passwordOne","passwordTwo","isAdmin","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","doSendEmailVerification","code","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","htmlFor","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","TweetItem","onPressRetweet","onReTweet","pressRetweet","onReplyTweet","onPressFavorite","onaddFavorite","pressFavorite","onChangeEditText","editText","onSaveEditText","onEditTweet","editMode","onToggleEditMode","text","_this$props","onRemoveTweet","dateFormat","moment","createdAt","fromNow","src","alt","editedAt","retweets","like","TweetList","map","TweetPage_TweetItem","reverse","TweetInput","onsubmit","onCreateTweet","onChangeText","pretext","userNameToReply","onCloseText","TweetPage","onListenForTweets","loading","orderByChild","limitToLast","limit","on","tweetsObject","tweetsList","keys","renderTweetInput","openText","TweetPage_TweetInput","undefined","likes","filter","rt","length","listFav","userId","T","listreTweets","TIMESTAMP","split","tweetSnapshot","objectWithoutProperties","remove","onOpenText","isReply","off","TweetPage_TweetList","UserList","usersObject","usersList","UserCard","onSendPasswordResetEmail","listPhoto","userRoute","width","bio","Grid","container","item","xs","url","User_UserCard","components_TweetPage","UserAccount","handleChangeUsername","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","getDownloadURL","avatarURL","backgroundColor","color","pointer","lib_default","hidden","accept","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","userAccout","User_UserList","LandingPage","SignIn","components_Header","react_router","exact","path","component","HomePage","ListeAmisPage","AccountPage","ReactDOM","render","react_https_redirect_lib_default","context","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.298118f3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const LISTEAMIS = '/listeAmis';\r\nexport const USER = '/user';","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyAe7hufjDHedAdKMIeT_MhjN_Oc1X34HoA\",\r\n\tauthDomain: \"superp2-8a0d2.firebaseapp.com\",\r\n\tdatabaseURL: \"https://superp2-8a0d2.firebaseio.com\",\r\n\tprojectId: \"superp2-8a0d2\",\r\n\tstorageBucket: \"superp2-8a0d2.appspot.com\",\r\n\tmessagingSenderId: \"499719922525\",\r\n\tappId: \"1:499719922525:web:cf330b8bb5ce987b\"\r\n};\r\n\r\nclass Firebase {\r\n\tconstructor() {\r\n\t\tapp.initializeApp(config);\r\n\r\n\t\tthis.serverValue = app.database.ServerValue;\r\n\r\n\t\tthis.auth = app.auth();\r\n\t\tthis.db = app.database();\r\n\t\tthis.storage = app.storage();\r\n\t}\r\n\r\n\r\n\tdoCreateUserWithEmailAndPassword = (email, password) =>\r\n\t\tthis.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n\tdoSignInWithEmailAndPassword = (email, password) =>\r\n\t\tthis.auth.signInWithEmailAndPassword(email, password);\r\n\r\n\tdoSignOut = () => this.auth.signOut();\r\n\r\n\tdoPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n\tdoPasswordUpdate = password =>\r\n\t\tthis.auth.currentUser.updatePassword(password);\r\n\r\n\tonAuthUserListener = (next, fallback) =>\r\n\t\tthis.auth.onAuthStateChanged(authUser => {\r\n\t\t\tif (authUser) {\r\n\t\t\t\tthis.user(authUser.uid)\r\n\t\t\t\t\t.once('value')\r\n\t\t\t\t\t.then(snapshot => {\r\n\t\t\t\t\t\tconst dbUser = snapshot.val();\r\n\t\t\t\t\t\tauthUser = {\r\n\t\t\t\t\t\t\tuid: authUser.uid,\r\n\t\t\t\t\t\t\temail: authUser.email,\r\n\t\t\t\t\t\t\temailVerified: authUser.emailVerified,\r\n\t\t\t\t\t\t\t...dbUser,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tnext(authUser);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfallback();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\tuser = uid => this.db.ref(`users/${uid}`);\r\n\r\n\tusers = () => this.db.ref('users');\r\n\r\n\tmessage = id => this.db.ref(`messages/${id}`);\r\n\r\n\tmessages = () => this.db.ref('messages');\r\n\t\r\n\ttweet = id => this.db.ref(`tweets/${id}`);\r\n\r\n\ttweets = () => this.db.ref('tweets');\r\n\r\n\timage = id => this.storage.ref(`images/${id}`);\r\n\r\n\timages = () => this.storage.ref(`images`);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, {withFirebase} from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n\t<button className=\"signoutbutton\" type=\"button\" onClick={firebase.doSignOut}>\r\n\t\t<span className='fa fa-sign-out'></span> Sign Out\r\n\t</button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      \r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../Sign/SignOut';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n\t<header className=\"root\">\r\n\t\t<h1 className=\"fa fa-twitter\">PWA twitter</h1>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => authUser ? (\r\n\t\t\t\t\t<NavigationAuth authUser={authUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavigationNonAuth />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</AuthUserContext.Consumer>\r\n\t</header>\r\n);\r\n\r\nconst NavigationAuth  = ({ authUser }) => (\r\n\t\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.HOME}>Home</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.ACCOUNT}>Account</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.LISTEAMIS}>Friend list</Link>\r\n\t\t</li>\r\n\t\t<li style={{float: 'right'}}>\r\n\t\t\t<SignOutButton />\r\n\t\t</li>\r\n\t</ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n\t</li>\r\n\t</ul>\r\n);\r\n\t\r\n\t\r\n\t\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from '../Navigation';\r\n\r\nconst Header = () => (\r\n    <Navigation />\r\n);\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>Register</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  name: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  isAdmin: false,\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'le compte existe deja';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = ` error`;\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n     onSubmit = event => {\r\n        const { username,name, email, passwordOne } = this.state;\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase.user(authUser.user.uid).set({\r\n                    username,\r\n                    name,\r\n                    email,\r\n                });\r\n            })\r\n            .then(() => {\r\n                return this.props.firebase.doSendEmailVerification();\r\n            })\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n                error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n                }\r\n\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n            name,\r\n        } = this.state;\r\n\r\n        const   isInvalid =\r\n                passwordOne !== passwordTwo ||\r\n                passwordOne === '' ||\r\n                email === '' ||\r\n                name === '' ||\r\n                username === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div >\r\n                    <label htmlFor=\"username\"><b>User Name</b></label>\r\n                    <input name=\"username\"  value={username}  onChange={this.onChange} type=\"text\"  placeholder=\"Full Name\"   />\r\n\r\n                    <label htmlFor=\"name\"><b>Name</b></label>\r\n                    <input name=\"name\"  value={name}  onChange={this.onChange} type=\"text\"  placeholder=\" Name\"   />\r\n                    \r\n                    <label htmlFor=\"email\"><b>Email Address</b></label>\r\n                    <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\"  />\r\n                    \r\n                    <label htmlFor=\"passwordOne\"><b>Password</b></label>\r\n                    <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\"  />\r\n                    \r\n                    <label htmlFor=\"passwordTwo\"><b>Confirm Password</b></label>\r\n                    <input name=\"passwordTwo\"  value={passwordTwo} onChange={this.onChange}  type=\"password\" placeholder=\"Confirm Password\"  />\r\n                    \r\n                    <button  className=\"registerbtn\" disabled={isInvalid} type=\"submit\">\r\n                        Sign Up\r\n                    </button>\r\n                    {error && <p>{error.message}</p>}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n    const SignUpLink = () => (\r\n        <p>\r\n            Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n        </p>\r\n    );\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\nimport { PasswordForgetLink } from '../../Password/PasswordForget';\r\n\r\n\tconst SignInPage = () => (\r\n\t\t\t<div >\r\n\t\t\t\t<h1>SignIn</h1>\r\n\t\t\t\t<SignInForm />\r\n\t\t\t\t<PasswordForgetLink />\r\n\t\t\t\t<SignUpLink />\r\n\t\t\t</div>\r\n\t);\r\n\r\nconst INITIAL_STATE = {\r\n\temail: '',\r\n\tpassword: '',\r\n\terror: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tconst { email, password } = this.state;\r\n\t\tthis.props.firebase\r\n\t\t\t.doSignInWithEmailAndPassword(email, password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t\tthis.props.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ error });\r\n\t\t\t});\r\n\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { email, password, error } = this.state;\r\n\r\n\t\tconst isInvalid = password === '' || email === '';\r\n\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"registerbtn\" disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst SignInForm = compose(\r\n\twithRouter,\r\n\twithFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass TweetItem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tpressFavorite: false,\r\n\t\t\tpressRetweet: false,\r\n\t\t\teditMode: false,\r\n\t\t\teditText: this.props.tweet.text,\r\n\t\t};\r\n\t}\r\n\r\n\tonPressRetweet =() => {\r\n\t\tthis.props.onReTweet(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t  pressRetweet: true\r\n\t\t})\r\n\t}\r\n\r\n\tonReplyTweet =() => {\r\n\t\tthis.props.onReplyTweet(this.props.tweet.username);\r\n\t}\r\n\r\n\t \r\n\tonPressFavorite =() => {\r\n\t\tthis.props.onaddFavorite(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t\tpressFavorite: true\r\n\t\t})\r\n\t}\r\n\r\n\tonChangeEditText = event => {\r\n\t\tthis.setState({ editText: event.target.value });\r\n\t  };\r\n\r\n\tonSaveEditText = () => {\r\n\t\tthis.props.onEditTweet(this.props.tweet);\r\n\t\tthis.setState({ editMode: false });\r\n\t   };\r\n\t   \r\n\tonToggleEditMode = () => {\r\n\t\tthis.setState(state => ({\r\n\t\teditMode: !state.editMode,\r\n\t\teditText: this.props.tweet.text,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {  tweet, onRemoveTweet} = this.props;\r\n\t\tconst { editMode } = this.state;\r\n\t\tconst dateFormat = moment(tweet.createdAt).fromNow();\r\n\t\treturn (\r\n\t\t\t<div className=\"root_Tweet_item\">\r\n\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t<span className=\"imgcontainer space\"> \r\n\t\t\t\t\t\t<img src={tweet.src} alt=\"Avatar\" className=\"avatar\" />  \r\n\t\t\t\t\t</span>  \r\n\t\t\t\t\t<span className=\"username space\">   {tweet.username}</span>\r\n          \t\t\t<span className=\"date space\">   {dateFormat}</span>\r\n\t\t\t\t\t{tweet.editedAt && <span>(Edited)</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>{tweet.text}</h3>\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<div className=\"icon_reply\" onClick={this.onReplyTweet} >\r\n\t\t\t\t\t\t<span className='fa fa-reply'>  Reply</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"rtGreen space\" onClick={this.onPressRetweet} >\r\n\t\t\t\t\t\t<span className='fa fa-retweet'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.retweets}   Retweet</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"favYellow space\" onClick={this.onPressFavorite} >\r\n\t\t\t\t\t\t<span className='fa fa-star'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.like}   Like</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<div className=\"space\">\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onSaveEditText} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-save'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">  Save</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-empty-set'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">   Reset</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t<span className='fa fa-edit'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Edit</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!editMode && (\r\n\t\t\t\t\t\t<div className=\" space\" onClick={() => onRemoveTweet(tweet.uid)} >\r\n\t\t\t\t\t\t\t<span className='fas fa-eraser'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Delete</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TweetItem;\r\n","import React from 'react';\r\n\r\nimport TweetItem from './TweetItem';\r\n\r\nconst TweetList = ({\r\n\tauthUser,\r\n\ttweets,\r\n\tonReTweet ,\r\n\tonaddFavorite,\r\n\tonReplyTweet,\r\n\tonEditTweet,\r\n\tonRemoveTweet,\r\n}) => (\r\n\t<div className=\"root_listTweet\">\r\n\t\t{tweets.map(tweet => (\r\n\t\t\t<TweetItem\r\n\t\t\tauthUser={authUser}\r\n\t\t\tkey={tweet.uid}\r\n\t\t\ttweet={tweet}\r\n\t\t\tonReTweet ={onReTweet}\r\n\t\t\tonaddFavorite={onaddFavorite}\r\n\t\t\tonReplyTweet={onReplyTweet}\r\n\t\t\tonEditTweet={onEditTweet}\r\n\t\t\tonRemoveTweet={onRemoveTweet}\r\n\t\t\t/>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default TweetList;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass TweetInput extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        const pretext = (this.props.userNameToReply) ?  `@${this.props.userNameToReply} `  : '';\r\n        this.state = {\r\n            text: pretext,\r\n            userNameToReply :'toto',\r\n        }\r\n    };\r\n\r\n    onsubmit = event =>{\r\n        this.props.onCreateTweet(event)\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    onChangeText = event =>\r\n    {\r\n        this.setState({ text: event.target.value });\r\n        this.props.onChangeText(event.target.value);\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const { text, userNameToReply  } = this.state;\r\n        return(\r\n            <form onSubmit={this.onsubmit}>\r\n                <textarea className=\"tweet_text\" \r\n                        name='text'\r\n                        value={text}\r\n                        onChange={this.onChangeText}\r\n                >\r\n                    {(userNameToReply) ? `@${userNameToReply} ` : ''}\r\n                </textarea>\r\n                <div className=\"tweet_button\">\r\n                    <button className=\"tweet_close\" \r\n                            onClick={this.props.onCloseText} >\r\n                        Close\r\n                    </button>\r\n                    <button className=\"tweet_send\" type='submit'> Send </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default  TweetInput;","import React, { Component } from \"react\"\r\nimport { withFirebase } from '../Firebase';\r\nimport TweetList from './TweetList';\r\nimport TweetInput from \"./TweetInput\";\r\n\r\nclass TweetPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            text: '',\r\n            loading: false,\r\n            tweets: [],\r\n            limit: 15, \r\n            openText: false,\r\n            userNameToReply: '',\r\n            messages: [],\r\n            isReply : false,\r\n            authUser :   props,\r\n        }     \r\n    };\r\n  \r\n    componentDidMount() {\r\n        this.onListenForTweets();\r\n    };\r\n\r\n    onListenForTweets = () => {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.tweets()\r\n            .orderByChild('createdAt')\r\n            .limitToLast(this.state.limit)\r\n            .on('value', snapshot => {\r\n                    const tweetsObject = snapshot.val();\r\n                    if (tweetsObject) {\r\n                        const tweetsList = Object.keys(tweetsObject).map(key => ({\r\n                            ...tweetsObject[key],\r\n                            uid: key,\r\n                        }));\r\n                    \r\n                        this.setState({\r\n                            tweets: tweetsList,\r\n                            loading: false,\r\n                        });\r\n                    } else {\r\n                        this.setState({ tweets: null, loading: false });\r\n                    }\r\n\r\n            });\r\n    };\r\n\r\n\r\n\r\n    renderTweetInput = () => {\r\n        if (this.state.openText) {\r\n            return (\r\n                <TweetInput\r\n                    authUser={this.state.authUser}\r\n                    onChangeText={this.onChangeText}\r\n                    onCreateTweet={this.onCreateTweet}\r\n                    text = {this.state.text}\r\n                    onCloseText={this.onCloseText}\r\n                    userNameToReply = {this.state.userNameToReply}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    onaddFavorite = (tweet) =>{\r\n        let user = this.state.authUser;\r\n        if(user.likes === undefined)\r\n        {\r\n            user.likes = [];\r\n        }\r\n        if (user.likes.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        user.likes.push(tweet.uid);\r\n        if(tweet.listFav === undefined)\r\n        {\r\n            tweet.listFav = [];\r\n        }\r\n        tweet.listFav.push({\r\n            userId: user.uid,\r\n            username: user.username,\r\n        });\r\n        tweet.like++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n    }\r\n\r\n  \r\n    onReTweet = (tweet) =>{   \r\n        this.state.authUser.T = \"dsqdq\";\r\n                console.log(this.state)  \r\n        if(this.state.authUser.retweets === undefined)\r\n        {\r\n            this.state.authUser.retweets = [];\r\n        } \r\n        let user = this.state.authUser;\r\n        if (user.retweets.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        user.retweets.push(tweet.uid);\r\n        tweet.listreTweets.push({\r\n            text: this.state.text,\r\n            userId: user.uid,\r\n            src: user.src,\r\n            username: user.username,\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            like: 0,\r\n            retweets: 0,\r\n        });\r\n        tweet.retweets++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n        this.props.firebase.user(tweet.uid).set({\r\n            ...user\r\n        });\r\n\r\n    }\r\n\r\n    onCreateTweet = (event) => {\r\n        this.props.firebase.tweets().push({\r\n            text: this.state.text,\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            src: this.state.authUser.src,\r\n            like: 0,\r\n            retweets: 0,\r\n            listreTweets:[],\r\n            listFav:[],\r\n        });\r\n\r\n        this.setState({ text: '', openText: false });\r\n        event.preventDefault();\r\n    };\r\n\r\n    onEditTweet = (tweet, text) => {\r\n        const { uid, ...tweetSnapshot } = tweet;\r\n\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweetSnapshot,\r\n            text,\r\n            editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n        });\r\n    };    \r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.tweets().off();\r\n    };\r\n\r\n    onRemoveTweet = uid => {\r\n        this.props.firebase.tweet(uid).remove();\r\n    };\r\n\r\n    onReplyTweet = (userNameToReply) =>{\r\n        this.setState({ \r\n            openText: true,\r\n            userNameToReply\r\n        });\r\n    }\r\n\r\n    onChangeText = value => {\r\n        this.setState({ text: value });\r\n    };\r\n    onOpenText  = event =>{\r\n        event.preventDefault()\r\n        this.setState({ openText: true })\r\n      }\r\n\r\n    render() {\r\n        const { tweets, loading, authUser } = this.state;\r\n        return (\r\n                <div>\r\n                    {loading && <div>Loading ...</div>}  \r\n                    <button onClick={this.onOpenText} className=\"open_button_tweet\">\r\n                        <span className='fa fa-lg fa-edit'></span> Tweet!\r\n                    </button>\r\n                    {this.renderTweetInput()}\r\n\r\n                    {tweets && (\r\n                        <TweetList\r\n                            authUser={authUser}\r\n                            tweets={tweets}\r\n                            onEditTweet={this.onEditTweet}\r\n                            onRemoveTweet={this.onRemoveTweet}\r\n                            onReTweet ={this.onReTweet}\r\n                            onaddFavorite={this.onaddFavorite}\r\n                            onReplyTweet={this.onReplyTweet}\r\n                        />\r\n                    )}\r\n\r\n                    {!tweets && <div>Aucun tweet trouver ...</div>}\r\n                \r\n\r\n                    \r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default withFirebase(TweetPage) ;\r\n","import TweetPage from './TweetPage';\r\n\r\nexport default TweetPage ;","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport {Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nclass UserCard extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t\tthis.state = {\r\n\t\t\tuser: this.props,\r\n\t\t};   \r\n\t}\r\n\t\r\n\tonSendPasswordResetEmail = () => {\r\n\t\tthis.props.firebase.doPasswordReset(this.state.user.email);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user } = this.state ||  [];\r\n\t\tlet  listPhoto = user.listPhoto;\r\n\t\tif(listPhoto=== undefined)\r\n\t\t{\r\n\t\t\tlistPhoto = [];\r\n\t\t}\r\n\t\tconst userRoute = ROUTES.USER+\"/\"+user.username;\r\n\t\treturn (\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t<img src={user.src} alt=\"singe\" style={{ width:'100%' }}/>  \r\n\t\t\t\t\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<p className=\"title\">\r\n\t\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t\t@{user.username}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{user.bio}</p>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t{listPhoto.map(message => (\r\n\t\t\t\t\t\t<Grid item xs={4} key={message.url}>\r\n\t\t\t\t\t\t\t<img src={message.url} alt=\"User_card_P\" className=\"user_card_P\" />   \r\n\t\t\t\t\t\t</Grid>\t\r\n\t\t\t\t\t))}\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withFirebase(UserCard);","import React from 'react';\r\nimport TweetPage from '../TweetPage';\r\nimport { compose } from 'recompose';\r\nimport { AuthUserContext } from '../Session';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withAuthorization } from '../Session';\r\nimport { UserCard } from '../User';\r\nconst HomePage = () => (\r\n\t<div>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => (\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t \t<UserCard {...authUser}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<TweetPage {...authUser} />\r\n\t\t\t\t\t</Grid>\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</AuthUserContext.Consumer>\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n\twithAuthorization(condition),\r\n)(HomePage);\r\n\r\n","import React, { Component } from \"react\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserAccount extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          text: '',\r\n          loading: false,\r\n          messages: [],\r\n          limit: 5,\r\n          user : props.authUser,\r\n          avatarURL :  props.authUser.src,\r\n          name : props.authUser.name, \r\n          username : props.authUser.username, \r\n          email : props.authUser.email, \r\n          bio : props.authUser.bio, \r\n        };\r\n        console.log(this.state.user);\r\n      }\r\n    handleChangeUsername = event => this.setState({ username: event.target.value });\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n    };\r\n    handleUploadSuccess = filename => {\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        this.props.firebase\r\n        .image(this.state.user.uid+'/'+filename)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n            let user = this.state.user;\r\n            if(user.listPhoto=== undefined)\r\n            {\r\n                user.listPhoto = [];\r\n            }\r\n            user.listPhoto.push({url : url})\r\n            user.src = url;\r\n            this.props.firebase.user(user.uid).set({\r\n                ...user\r\n            });\r\n            this.setState({ avatarURL : url, user : user})\r\n\r\n        });\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      }; \r\n\r\n    onSubmit = event => {\r\n        const { username,name, email, bio } = this.state;\r\n        let user = this.state.user;\r\n        user.username = username;\r\n        user.name =  name;\r\n        user.email =   email;\r\n        user.bio = bio;\r\n        this.props.firebase.user(this.state.user.uid).set({\r\n            ...this.state.user\r\n        }).then(() => {\r\n\r\n        });\r\n        \r\n        this.setState({  user : user})\r\n\r\n        event.preventDefault();\r\n    };\r\n \r\n    render()\r\n    {\r\n        const {user} = this.state;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"imgcontainer\">\r\n                    <img src={this.state.avatarURL} alt=\"Avatar\" className=\"avatar_cardVersion\" />\r\n                </div>\r\n                <div  className=\"container\">\r\n                    <label htmlFor=\"username\"><b>UserName</b></label>\r\n                    <input name=\"username\"  value={this.state.username}  onChange={this.onChange} type=\"text\"  placeholder=\"Full Name\"   />\r\n                    \r\n                    <label htmlFor=\"name\"><b>Name</b></label>\r\n                    <input name=\"name\"  value={this.state.name}  onChange={this.onChange} type=\"text\"  placeholder=\" Name\"   />\r\n                    \r\n                    <label htmlFor=\"email\"><b>Email Address</b></label>\r\n                    <input name=\"email\" value={this.state.email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\"  />\r\n                    \r\n                    <label htmlFor=\"bio\"><b>bio</b></label>\r\n                    <textarea \r\n                            name='bio'\r\n                            value={this.state.bio}\r\n                            onChange={this.onChange}\r\n                    ></textarea>\r\n                   \r\n                    <label className=\"registerbtn\" style={{backgroundColor: 'steelblue', color: 'white',   pointer: 'cursor'}}>\r\n                        Select your awesome avatar\r\n                        <FileUploader\r\n                        hidden\r\n                        accept=\"image/*\"\r\n                        storageRef={this.props.firebase.image(user.uid)}\r\n                        onUploadStart={this.handleUploadStart}\r\n                        onUploadError={this.handleUploadError}\r\n                        onUploadSuccess={this.handleUploadSuccess}\r\n                        onProgress={this.handleProgress}\r\n                        />\r\n                    </label>\r\n                    <button  className=\"registerbtn\"  type=\"submit\">\r\n                        Valider\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(UserAccount);","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nimport UserAccount from \"./userAccout\";\r\nconst AccountPage = () => (\r\n     <AuthUserContext.Consumer> \r\n      {authUser => (\r\n            <UserAccount authUser = {authUser}/>\r\n        )}\r\n     </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport {UserList} from '../User';\r\n\r\n\r\nconst ListeAmisPage = () => (\r\n  <AuthUserContext.Consumer>\r\n      \r\n      {authUser => (\r\n            < UserList authUser/>\r\n        )}\r\n  </AuthUserContext.Consumer>\r\n  \r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(ListeAmisPage);","import React from 'react';\r\nimport SignInPage from '../Sign/SignIn';\r\n\r\nconst LandingPage = () => (\r\n        <SignInPage/>\r\n);\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport SignUpPage from '../Sign/SignUp';\r\nimport SignInPage from '../Sign/SignIn';\r\nimport PasswordForgetPage from '../Password/PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport ListeAmisPage from '../ListeDesAmis';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\nimport LandingPage from '../Landing';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<hr />\r\n\t\t\t<div  className=\"container\">\r\n\t\t\t\t<Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n\t\t\t\t<Route path={ROUTES.HOME} component={HomePage} />\r\n\t\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n\t\t\t\t<Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n\t\t\t\t<Route path={ROUTES.LISTEAMIS} component={ListeAmisPage} />\r\n\t\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage}\t/>\r\n\t\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"../src/components/App\"\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport HttpsRedirect from 'react-https-redirect';\r\n\r\nReactDOM.render(\r\n\t<HttpsRedirect>\r\n\t\t<FirebaseContext.Provider value={new Firebase()}>\r\n\t\t\t<App />\r\n\t\t</FirebaseContext.Provider>\r\n\t</HttpsRedirect>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}