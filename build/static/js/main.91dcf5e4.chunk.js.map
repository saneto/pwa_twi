{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Sign/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Header/index.js","components/Sign/SignUp/index.js","components/Password/PasswordForget/index.js","components/Sign/SignIn/index.js","components/TweetPage/TweetItem.js","components/TweetPage/TweetList.js","components/TweetPage/TweetInput.js","components/TweetPage/TweetPage.js","components/TweetPage/index.js","components/User/UserList.js","components/User/UserCard.js","components/Home/index.js","components/Account/userAccout.js","components/Account/index.js","components/ListeDesAmis/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","snapshot","dbUser","val","objectSpread","emailVerified","providerData","db","ref","concat","users","message","id","messages","tweet","tweets","image","storage","images","app","initializeApp","serverValue","database","ServerValue","_ref","className","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","style","float","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Header","components_Navigation","INITIAL_STATE","username","name","passwordOne","passwordTwo","isAdmin","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","doSendEmailVerification","code","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","for","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","TweetItem","onPressRetweet","onReTweet","pressRetweet","onReplyTweet","onPressFavorite","onaddFavorite","pressFavorite","onChangeEditText","editText","onSaveEditText","onEditTweet","editMode","onToggleEditMode","text","_this$props","onRemoveTweet","dateFormat","moment","createdAt","fromNow","editedAt","retweets","like","TweetList","map","TweetPage_TweetItem","reverse","TweetInput","onsubmit","onCreateTweet","onChangeText","pretext","userNameToReply","onCloseText","TweetPage","onListenForTweets","loading","orderByChild","limitToLast","limit","on","tweetsObject","tweetsList","keys","renderTweetInput","openText","TweetPage_TweetInput","likes","filter","rt","length","undefined","listFav","userId","split","listreTweets","TIMESTAMP","tweetSnapshot","objectWithoutProperties","remove","onOpenText","isReply","off","TweetPage_TweetList","UserList","usersObject","usersList","UserCard","onSendPasswordResetEmail","userRoute","src","alt","width","bio","Grid","container","spacing","item","xs","User_UserCard","components_TweetPage","UserAccount","handleChangeUsername","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","child","getDownloadURL","url","avatarURL","htmlFor","backgroundColor","color","padding","borderRadius","pointer","lib_default","hidden","accept","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","userAccout","User_UserList","components_Header","react_router","path","component","HomePage","exact","ListeAmisPage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.91dcf5e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const LISTEAMIS = '/listeAmis';\r\nexport const USER = '/user';","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAe7hufjDHedAdKMIeT_MhjN_Oc1X34HoA\",\r\n    authDomain: \"superp2-8a0d2.firebaseapp.com\",\r\n    databaseURL: \"https://superp2-8a0d2.firebaseio.com\",\r\n    projectId: \"superp2-8a0d2\",\r\n    storageBucket: \"superp2-8a0d2.appspot.com\",\r\n    messagingSenderId: \"499719922525\",\r\n    appId: \"1:499719922525:web:cf330b8bb5ce987b\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.storage = app.storage();\r\n  }\r\n\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n    \r\n\r\n\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  message = id => this.db.ref(`messages/${id}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n  \r\n  tweet = id => this.db.ref(`tweets/${id}`);\r\n\r\n  tweets = () => this.db.ref('tweets');\r\n\r\n  image = id => this.storage.ref(`images/${id}`);\r\n\r\n  images = () => this.storage.ref(`images`);\r\n\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, {withFirebase} from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n\t<button className=\"signoutbutton\" type=\"button\" onClick={firebase.doSignOut}>\r\n\t\t<span className='fa fa-sign-out'></span> Sign Out\r\n\t</button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      \r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../Sign/SignOut';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n\t<header className=\"root\">\r\n\t\t<h1 className=\"fa fa-twitter\">PWA twitter</h1>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => authUser ? (\r\n\t\t\t\t\t<NavigationAuth authUser={authUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavigationNonAuth />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</AuthUserContext.Consumer>\r\n\t</header>\r\n);\r\n\r\nconst NavigationAuth  = ({ authUser }) => (\r\n\t\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.HOME}>Home</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.ACCOUNT}>Account</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.LISTEAMIS}>Friend list</Link>\r\n\t\t</li>\r\n\t\t<li style={{float: 'right'}}>\r\n\t\t\t<SignOutButton />\r\n\t\t</li>\r\n\t</ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n\t</li>\r\n\t</ul>\r\n);\r\n\t\r\n\t\r\n\t\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport Navigation from '../Navigation';\r\n\r\nclass Header extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n         <Navigation />\r\n        )\r\n    };\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>Register</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  name: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  isAdmin: false,\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'le compte existe deja';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = ` error`;\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n     onSubmit = event => {\r\n        const { username,name, email, passwordOne } = this.state;\r\n\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase.user(authUser.user.uid).set({\r\n                    username,\r\n                    name,\r\n                    email,\r\n                });\r\n            })\r\n            .then(() => {\r\n                return this.props.firebase.doSendEmailVerification();\r\n            })\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n                error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n                }\r\n\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n            name,\r\n        } = this.state;\r\n\r\n        const   isInvalid =\r\n                passwordOne !== passwordTwo ||\r\n                passwordOne === '' ||\r\n                email === '' ||\r\n                name === '' ||\r\n                username === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div >\r\n                    <label for=\"username\"><b>User Name</b></label>\r\n                    <input name=\"username\"  value={username}  onChange={this.onChange} type=\"text\"  placeholder=\"Full Name\"   />\r\n\r\n                    <label for=\"username\"><b>Name</b></label>\r\n                    <input name=\"username\"  value={name}  onChange={this.onChange} type=\"text\"  placeholder=\" Name\"   />\r\n                    \r\n                    <label for=\"email\"><b>Email Address</b></label>\r\n                    <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\"  />\r\n                    \r\n                    <label for=\"passwordOne\"><b>Password</b></label>\r\n                    <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\"  />\r\n                    \r\n                    <label for=\"passwordTwo\"><b>Confirm Password</b></label>\r\n                    <input name=\"passwordTwo\"  value={passwordTwo} onChange={this.onChange}  type=\"password\" placeholder=\"Confirm Password\"  />\r\n                    \r\n                    <button  className=\"registerbtn\" disabled={isInvalid} type=\"submit\">\r\n                        Sign Up\r\n                    </button>\r\n                    {error && <p>{error.message}</p>}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n    const SignUpLink = () => (\r\n        <p>\r\n            Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n        </p>\r\n    );\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\nimport { PasswordForgetLink } from '../../Password/PasswordForget';\r\n\r\n\tconst SignInPage = () => (\r\n\t\t\t<div >\r\n\t\t\t\t<h1>SignIn</h1>\r\n\t\t\t\t<SignInForm />\r\n\t\t\t\t<PasswordForgetLink />\r\n\t\t\t\t<SignUpLink />\r\n\t\t\t</div>\r\n\t);\r\n\r\nconst INITIAL_STATE = {\r\n\temail: '',\r\n\tpassword: '',\r\n\terror: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tconst { email, password } = this.state;\r\n\t\tthis.props.firebase\r\n\t\t\t.doSignInWithEmailAndPassword(email, password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t\tthis.props.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ error });\r\n\t\t\t});\r\n\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { email, password, error } = this.state;\r\n\r\n\t\tconst isInvalid = password === '' || email === '';\r\n\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"registerbtn\" disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst SignInForm = compose(\r\n\twithRouter,\r\n\twithFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass TweetItem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tpressFavorite: false,\r\n\t\t\tpressRetweet: false,\r\n\t\t\teditMode: false,\r\n\t\t\teditText: this.props.tweet.text,\r\n\t\t};\r\n\t}\r\n\r\n\tonPressRetweet =() => {\r\n\t\tthis.props.onReTweet(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t  pressRetweet: true\r\n\t\t})\r\n\t}\r\n\r\n\tonReplyTweet =() => {\r\n\t\tthis.props.onReplyTweet(this.props.tweet.username);\r\n\t}\r\n\r\n\t \r\n\tonPressFavorite =() => {\r\n\t\tthis.props.onaddFavorite(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t\tpressFavorite: true\r\n\t\t})\r\n\t}\r\n\r\n\tonChangeEditText = event => {\r\n\t\tthis.setState({ editText: event.target.value });\r\n\t  };\r\n\r\n\tonSaveEditText = () => {\r\n\t\tthis.props.onEditTweet(this.props.tweet);\r\n\t\tthis.setState({ editMode: false });\r\n\t   };\r\n\t   \r\n\tonToggleEditMode = () => {\r\n\t\tthis.setState(state => ({\r\n\t\teditMode: !state.editMode,\r\n\t\teditText: this.props.tweet.text,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {  tweet, onRemoveTweet} = this.props;\r\n\t\tconst { editMode } = this.state;\r\n\t\tconst dateFormat = moment(tweet.createdAt).fromNow()\r\n\t\treturn (\r\n\t\t\t<div className=\"root_Tweet_item\">\r\n\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t<span className=\"username\"> {tweet.username}</span>\r\n          \t\t\t<span className=\"date\"> {dateFormat}</span>\r\n\t\t\t\t\t{tweet.editedAt && <span>(Edited)</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>{tweet.text}</h3>\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<div className=\"icon_reply\" onClick={this.onReplyTweet} >\r\n\t\t\t\t\t\t<span className='fa fa-reply'>  Reply</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"rtGreen space\" onClick={this.onPressRetweet} >\r\n\t\t\t\t\t\t<span className='fa fa-retweet'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.retweets}   Retweet</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"favYellow space\" onClick={this.onPressFavorite} >\r\n\t\t\t\t\t\t<span className='fa fa-star'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.like}   Like</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<div className=\"space\">\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onSaveEditText} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-save'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">  Save</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-empty-set'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">   Reset</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t<span className='fa fa-edit'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Edit</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!editMode && (\r\n\t\t\t\t\t\t<div className=\" space\" onClick={() => onRemoveTweet(tweet.uid)} >\r\n\t\t\t\t\t\t\t<span className='fas fa-eraser'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Delete</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TweetItem;\r\n","import React from 'react';\r\n\r\nimport TweetItem from './TweetItem';\r\n\r\nconst TweetList = ({\r\n\tauthUser,\r\n\ttweets,\r\n\tonReTweet ,\r\n\tonaddFavorite,\r\n\tonReplyTweet,\r\n\tonEditTweet,\r\n\tonRemoveTweet,\r\n}) => (\r\n\t<div className=\"root_listTweet\">\r\n\t\t{tweets.map(tweet => (\r\n\t\t\t<TweetItem\r\n\t\t\tauthUser={authUser}\r\n\t\t\tkey={tweet.uid}\r\n\t\t\ttweet={tweet}\r\n\t\t\tonReTweet ={onReTweet}\r\n\t\t\tonaddFavorite={onaddFavorite}\r\n\t\t\tonReplyTweet={onReplyTweet}\r\n\t\t\tonEditTweet={onEditTweet}\r\n\t\t\tonRemoveTweet={onRemoveTweet}\r\n\t\t\t/>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default TweetList;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass TweetInput extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        const pretext = (this.props.userNameToReply) ?  `@${this.props.userNameToReply} `  : '';\r\n        this.state = {\r\n            text: pretext,\r\n            userNameToReply :'toto',\r\n        }\r\n    };\r\n\r\n    onsubmit = event =>{\r\n        this.props.onCreateTweet(event)\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    onChangeText = event =>\r\n    {\r\n        this.setState({ text: event.target.value });\r\n        this.props.onChangeText(event.target.value);\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const { text, userNameToReply  } = this.state;\r\n        return(\r\n            <form onSubmit={this.onsubmit}>\r\n                <textarea className=\"tweet_text\" \r\n                        name='text'\r\n                        value={text}\r\n                        onChange={this.onChangeText}\r\n                >\r\n                    {(userNameToReply) ? `@${userNameToReply} ` : ''}\r\n                </textarea>\r\n                <div className=\"tweet_button\">\r\n                    <button className=\"tweet_close\" \r\n                            onClick={this.props.onCloseText} >\r\n                        Close\r\n                    </button>\r\n                    <button className=\"tweet_send\" type='submit'> Send </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default  TweetInput;","import React, { Component } from \"react\"\r\nimport { withFirebase } from '../Firebase';\r\nimport TweetList from './TweetList';\r\nimport TweetInput from \"./TweetInput\";\r\nimport * as ROUTES from '../../constants/routes';\r\nimport {Link } from 'react-router-dom';\r\n\r\nclass TweetPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            text: '',\r\n            loading: false,\r\n            tweets: [],\r\n            limit: 15, \r\n            openText: false,\r\n            userNameToReply: '',\r\n            messages: [],\r\n            isReply : false,\r\n            authUser :  Object.assign({}, props.authUser, { retweets: [] }, { likes: [] }),\r\n        }     \r\n    };\r\n  \r\n    componentDidMount() {\r\n        this.onListenForTweets();\r\n    };\r\n\r\n    onListenForTweets = () => {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.tweets()\r\n            .orderByChild('createdAt')\r\n            .limitToLast(this.state.limit)\r\n            .on('value', snapshot => {\r\n                    const tweetsObject = snapshot.val();\r\n                    if (tweetsObject) {\r\n                        const tweetsList = Object.keys(tweetsObject).map(key => ({\r\n                            ...tweetsObject[key],\r\n                            uid: key,\r\n                        }));\r\n                    \r\n                        this.setState({\r\n                            tweets: tweetsList,\r\n                            loading: false,\r\n                        });\r\n                    } else {\r\n                        this.setState({ tweets: null, loading: false });\r\n                    }\r\n\r\n            });\r\n    };\r\n\r\n\r\n\r\n    renderTweetInput = () => {\r\n        if (this.state.openText) {\r\n            return (\r\n                <TweetInput\r\n                    authUser={this.state.authUser}\r\n                    onChangeText={this.onChangeText}\r\n                    onCreateTweet={this.onCreateTweet}\r\n                    text = {this.state.text}\r\n                    onCloseText={this.onCloseText}\r\n                    userNameToReply = {this.state.userNameToReply}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    onaddFavorite = (tweet) =>{\r\n\r\n        if (this.state.authUser.likes.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        this.state.authUser.likes.push(tweet.uid);\r\n        if(tweet.listFav === undefined)\r\n        {\r\n            tweet.listFav = [];\r\n        }\r\n        tweet.listFav.push({\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n        });\r\n        tweet.like++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n    }\r\n\r\n  \r\n    onReTweet = (tweet) =>{        \r\n        if (this.state.authUser.retweets.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        this.state.authUser.retweets.push(tweet.uid);\r\n\r\n        if(tweet.listreTweets === undefined)\r\n        {\r\n            tweet.listreTweets = [];\r\n        }\r\n        tweet.listreTweets.push({\r\n            text: this.state.text,\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            like: 0,\r\n            retweets: 0,\r\n        });\r\n        tweet.retweets++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n\r\n    }\r\n\r\n    onCreateTweet = (event) => {\r\n        this.props.firebase.tweets().push({\r\n            text: this.state.text,\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            like: 0,\r\n            retweets: 0,\r\n            listreTweets:[],\r\n            listFav:[],\r\n        });\r\n\r\n        this.setState({ text: '', openText: false });\r\n        event.preventDefault();\r\n    };\r\n\r\n    onEditTweet = (tweet, text) => {\r\n        const { uid, ...tweetSnapshot } = tweet;\r\n\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweetSnapshot,\r\n            text,\r\n            editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n        });\r\n    };    \r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.tweets().off();\r\n    };\r\n\r\n    onRemoveTweet = uid => {\r\n        this.props.firebase.tweet(uid).remove();\r\n    };\r\n\r\n    onReplyTweet = (userNameToReply) =>{\r\n        this.setState({ \r\n            openText: true,\r\n            userNameToReply\r\n        });\r\n    }\r\n\r\n    onChangeText = value => {\r\n        this.setState({ text: value });\r\n    };\r\n    onOpenText  = event =>{\r\n        event.preventDefault()\r\n        this.setState({ openText: true })\r\n      }\r\n\r\n    render() {\r\n        const { text, tweets, loading, authUser } = this.state;\r\n        const userRoute = ROUTES.USER+\"/\"+authUser.username;\r\n        return (\r\n                <div>\r\n                    {loading && <div>Loading ...</div>}  \r\n                    <button onClick={this.onOpenText} className=\"open_button_tweet\">\r\n                        <span className='fa fa-lg fa-edit'></span> Tweet!\r\n                    </button>\r\n                    {this.renderTweetInput()}\r\n\r\n                    {tweets && (\r\n                        <TweetList\r\n                            authUser={authUser}\r\n                            tweets={tweets}\r\n                            onEditTweet={this.onEditTweet}\r\n                            onRemoveTweet={this.onRemoveTweet}\r\n                            onReTweet ={this.onReTweet}\r\n                            onaddFavorite={this.onaddFavorite}\r\n                            onReplyTweet={this.onReplyTweet}\r\n                        />\r\n                    )}\r\n\r\n                    {!tweets && <div>Aucun tweet trouver ...</div>}\r\n                \r\n\r\n                    \r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default withFirebase(TweetPage) ;\r\n","import TweetPage from './TweetPage';\r\n\r\nexport default TweetPage ;","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport {Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass UserCard extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t\tthis.state = {\r\n\t\t\tuser: this.props,\r\n\t\t};   \r\n\t}\r\n\t\r\n\tonSendPasswordResetEmail = () => {\r\n\t\tthis.props.firebase.doPasswordReset(this.state.user.email);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user } = this.state;\r\n\t\tconst userRoute = ROUTES.USER+\"/\"+user.username;\r\n\t\treturn (\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t<img src=\"https://www.pokepedia.fr/images/thumb/2/29/Ouisticram-Pt.png/250px-Ouisticram-Pt.png\" alt=\"singe\" style={{ width:'100%' }}/>  \r\n\t\t\t\t\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t\t{user.name} dddd\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<p className=\"title\">\r\n\t\t\t\t\t<Link to={userRoute}>\r\n\t\t\t\t\t\t@{user.username}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{user.bio} sqdsq defaultsqd qs\r\n\t\t\t\tdsq defaultsqdsq dsq\r\n\t\t\t\tdsqdsqd\r\n\t\t\t\tsqdqsd qsd\r\n\t\t\t\tsqdsqdsqd\r\n\t\t\t\t qsdsqd\r\n\t\t\t\t sqdqsdqsdsqd</p>\r\n\t\t\t</div>\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withFirebase(UserCard);","import React from 'react';\r\nimport TweetPage from '../TweetPage';\r\nimport { compose } from 'recompose';\r\nimport { AuthUserContext } from '../Session';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withAuthorization } from '../Session';\r\nimport { UserCard } from '../User';\r\nconst HomePage = () => (\r\n\t<div>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => (\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t \t<UserCard {...authUser}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<TweetPage authUser={authUser} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t)}\r\n\t\t</AuthUserContext.Consumer>\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n\twithAuthorization(condition),\r\n)(HomePage);\r\n\r\n","import React, { Component } from \"react\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserAccount extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          text: '',\r\n          loading: false,\r\n          messages: [],\r\n          limit: 5,\r\n        };\r\n      }\r\n    handleChangeUsername = event => this.setState({ username: event.target.value });\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n    handleUploadSuccess = filename => {\r\n        console.log(filename)\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        this.props.firebase\r\n        .images\r\n        .child(filename)\r\n        .getDownloadURL()\r\n        .then(url => this.setState({ avatarURL: url }));\r\n    };\r\n\r\n    onChange = event => {\r\n        console.log(this.state)\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      };\r\n \r\n    render()\r\n    {\r\n        const src=\"\";\r\n        const username=\"\";\r\n        const name=\"\";\r\n        const bio=\"\";\r\n        const email=\"\";\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"imgcontainer\">\r\n                    <img src=\"https://www.pokepedia.fr/images/thumb/2/29/Ouisticram-Pt.png/250px-Ouisticram-Pt.png\" alt=\"Avatar\" className=\"avatar\"/>\r\n                </div>\r\n                <div  className=\"container\">\r\n                    <label htmlFor=\"username\"><b>User Name</b></label>\r\n                    <input name=\"username\"  value={username}  onChange={this.onChange} type=\"text\"  placeholder=\"Full Name\"   />\r\n\r\n                    <label htmlFor=\"username\"><b>Name</b></label>\r\n                    <input name=\"username\"  value={name}  onChange={this.onChange} type=\"text\"  placeholder=\" Name\"   />\r\n                    \r\n                    <label htmlFor=\"email\"><b>Email Address</b></label>\r\n                    <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email Address\"  />\r\n                    \r\n                    <label htmlFor=\"bio\"><b>bio</b></label>\r\n\r\n                    <textarea className=\"tweet_text\" \r\n                            name='bio'\r\n                            value={bio}\r\n                            onChange={this.onChange}\r\n                    ></textarea>\r\n                   \r\n                   \r\n                   \r\n                    <label style={{backgroundColor: 'steelblue', color: 'white', padding: 10, borderRadius: 4, pointer: 'cursor'}}>\r\n                        Select your awesome avatar\r\n                        <FileUploader\r\n                        hidden\r\n                        accept=\"image/*\"\r\n                        storageRef={this.props.firebase.image('dqsdds')}\r\n                        onUploadStart={this.handleUploadStart}\r\n                        onUploadError={this.handleUploadError}\r\n                        onUploadSuccess={this.handleUploadSuccess}\r\n                        onProgress={this.handleProgress}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(UserAccount);","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nimport UserAccount from \"./userAccout\";\r\nconst AccountPage = () => (\r\n     <UserAccount/>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport {UserList} from '../User';\r\n\r\n\r\nconst ListeAmisPage = () => (\r\n  <AuthUserContext.Consumer>\r\n      \r\n      {authUser => (\r\n            < UserList authUser/>\r\n        )}\r\n  </AuthUserContext.Consumer>\r\n  \r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(ListeAmisPage);","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport SignUpPage from '../Sign/SignUp';\r\nimport SignInPage from '../Sign/SignIn';\r\nimport PasswordForgetPage from '../Password/PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport ListeAmisPage from '../ListeDesAmis';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<hr />\r\n\t\t\t<div  className=\"container\">\r\n\t\t\t\t<Route path={ROUTES.HOME} component={HomePage} />\r\n\t\t\t\t<Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n\t\t\t\t<Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n\t\t\t\t<Route path={ROUTES.LISTEAMIS} component={ListeAmisPage} />\r\n\t\t\t\t<Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage}\t/>\r\n\t\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"../src/components/App\"\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>,\r\n     document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}