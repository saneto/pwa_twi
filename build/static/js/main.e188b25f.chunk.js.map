{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Sign/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Header/index.js","components/Sign/SignUp/index.js","components/Password/PasswordForget/index.js","components/Sign/SignIn/index.js","components/TweetPage/TweetItem.js","components/TweetPage/TweetList.js","components/TweetPage/TweetInput.js","components/TweetPage/TweetPage.js","components/TweetPage/index.js","components/Home/index.js","components/Password/PasswordChange/index.js","components/User/UserList.js","components/User/UserItem.js","components/Account/index.js","components/ListeDesAmis/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","snapshot","dbUser","val","objectSpread","emailVerified","providerData","db","ref","concat","users","message","messages","tweet","tweets","app","initializeApp","serverValue","database","ServerValue","_ref","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","className","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Header","components_Navigation","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","doSendEmailVerification","code","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","TweetItem","onPressRetweet","onReTweet","pressRetweet","onReplyTweet","onPressFavorite","onaddFavorite","pressFavorite","onChangeEditText","editText","onSaveEditText","onEditTweet","editMode","onToggleEditMode","text","_this$props","onRemoveTweet","dateFormat","moment","createdAt","fromNow","editedAt","retweets","like","TweetList","map","TweetPage_TweetItem","reverse","TweetInput","onsubmit","onCreateTweet","onChangeText","pretext","userNameToReply","onCloseText","TweetPage","onListenForTweets","loading","orderByChild","limitToLast","limit","on","tweetsObject","tweetsList","keys","renderTweetInput","openText","TweetPage_TweetInput","likes","filter","rt","length","undefined","listFav","userId","split","listreTweets","TIMESTAMP","tweetSnapshot","objectWithoutProperties","remove","onOpenText","isReply","off","TweetPage_TweetList","components_TweetPage","PasswordChangeForm","UserList","usersObject","usersList","UserItem","onSendPasswordResetEmail","src","User_UserItem","PasswordChange","User_UserList","components_Header","react_router","path","component","HomePage","exact","ListeAmisPage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e188b25f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const LISTEAMIS = '/listeAmis';","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAe7hufjDHedAdKMIeT_MhjN_Oc1X34HoA\",\r\n    authDomain: \"superp2-8a0d2.firebaseapp.com\",\r\n    databaseURL: \"https://superp2-8a0d2.firebaseio.com\",\r\n    projectId: \"superp2-8a0d2\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"499719922525\",\r\n    appId: \"1:499719922525:web:cf330b8bb5ce987b\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n  }\r\n\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n    \r\n\r\n\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n  \r\n  tweet = uid => this.db.ref(`tweets/${uid}`);\r\n\r\n  tweets = () => this.db.ref('tweets');\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, {withFirebase} from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      \r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\n\r\nimport {Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../Sign/SignOut';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n\t<header className=\"root\">\r\n\t\t <h1 className=\"logo\">Github tweet</h1>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => authUser ? (\r\n\t\t\t\t\t<NavigationAuth authUser={authUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavigationNonAuth />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</AuthUserContext.Consumer>\r\n\t</header>\r\n);\r\n\r\nconst NavigationAuth  = ({ authUser }) => (\r\n\t\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.LANDING}>Landing</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.HOME}>Home</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.ACCOUNT}>Account</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.LISTEAMIS}>Friend list</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<SignOutButton />\r\n\t\t</li>\r\n\t</ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.LANDING}>Landing</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n\t</li>\r\n\t</ul>\r\n);\r\n\t\r\n\t\r\n\t\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport Navigation from '../Navigation';\r\n\r\nclass Header extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navigation />\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  isAdmin: false,\r\n  error: null,\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = 'le compte existe deja';\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = ` error`;\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n     onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase.user(authUser.user.uid).set({\r\n                    username,\r\n                    email,\r\n                });\r\n            })\r\n            .then(() => {\r\n                return this.props.firebase.doSendEmailVerification();\r\n            })\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n                error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n                }\r\n\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const   isInvalid =\r\n                passwordOne !== passwordTwo ||\r\n                passwordOne === '' ||\r\n                email === '' ||\r\n                username === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name\"\r\n                />\r\n                <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    value={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                />\r\n                <label>\r\n                </label>\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Sign Up\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n    const SignUpLink = () => (\r\n        <p>\r\n            Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n        </p>\r\n    );\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../../Firebase';\r\nimport * as ROUTES from '../../../constants/routes';\r\nimport { PasswordForgetLink } from '../../Password/PasswordForget';\r\n\r\n\tconst SignInPage = () => (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>SignIn</h1>\r\n\t\t\t\t<SignInForm />\r\n\t\t\t\t<PasswordForgetLink />\r\n\t\t\t\t<SignUpLink />\r\n\t\t\t</div>\r\n\t);\r\n\r\nconst INITIAL_STATE = {\r\n\temail: '',\r\n\tpassword: '',\r\n\terror: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tconst { email, password } = this.state;\r\n\t\tthis.props.firebase\r\n\t\t\t.doSignInWithEmailAndPassword(email, password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t\tthis.props.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ error });\r\n\t\t\t});\r\n\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { email, password, error } = this.state;\r\n\r\n\t\tconst isInvalid = password === '' || email === '';\r\n\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst SignInForm = compose(\r\n\twithRouter,\r\n\twithFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass TweetItem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tpressFavorite: false,\r\n\t\t\tpressRetweet: false,\r\n\t\t\teditMode: false,\r\n\t\t\teditText: this.props.tweet.text,\r\n\t\t};\r\n\t}\r\n\r\n\tonPressRetweet =() => {\r\n\t\tthis.props.onReTweet(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t  pressRetweet: true\r\n\t\t})\r\n\t}\r\n\r\n\tonReplyTweet =() => {\r\n\t\tthis.props.onReplyTweet(this.props.tweet.username);\r\n\t}\r\n\r\n\t \r\n\tonPressFavorite =() => {\r\n\t\tthis.props.onaddFavorite(this.props.tweet);\r\n\t\tthis.setState({\r\n\t\t\tpressFavorite: true\r\n\t\t})\r\n\t}\r\n\r\n\tonChangeEditText = event => {\r\n\t\tthis.setState({ editText: event.target.value });\r\n\t  };\r\n\r\n\tonSaveEditText = () => {\r\n\t\tthis.props.onEditTweet(this.props.tweet);\r\n\t\tthis.setState({ editMode: false });\r\n\t   };\r\n\t   \r\n\tonToggleEditMode = () => {\r\n\t\tthis.setState(state => ({\r\n\t\teditMode: !state.editMode,\r\n\t\teditText: this.props.tweet.text,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {  tweet, onRemoveTweet} = this.props;\r\n\t\tconst { editMode, editText } = this.state;\r\n\t\tconst dateFormat = moment(tweet.createdAt).fromNow()\r\n\t\treturn (\r\n\t\t\t<div className=\"root_Tweet_item\">\r\n\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t<span className=\"username\"> {tweet.username}</span>\r\n          \t\t\t<span className=\"date\"> {dateFormat}</span>\r\n\t\t\t\t\t{tweet.editedAt && <span>(Edited)</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>{tweet.text}</h3>\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<div className=\"icon_reply\" onClick={this.onReplyTweet} >\r\n\t\t\t\t\t\t<span className='fa fa-reply'>  Reply</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"rtGreen space\" onClick={this.onPressRetweet} >\r\n\t\t\t\t\t\t<span className='fa fa-retweet'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.retweets}   Retweet</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"favYellow space\" onClick={this.onPressFavorite} >\r\n\t\t\t\t\t\t<span className='fa fa-star'></span>\r\n\t\t\t\t\t\t<span className=\"number\">{tweet.like}   Like</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<div className=\"space\">\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onSaveEditText} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-star'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">  Save</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t\t<span className='fa fa-star'></span>\r\n\t\t\t\t\t\t\t\t<span className=\"number\">   Reset</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"space\" onClick={this.onToggleEditMode} >\r\n\t\t\t\t\t\t\t<span className='fa fa-retweet'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Edit</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!editMode && (\r\n\t\t\t\t\t\t<div className=\" space\" onClick={() => onRemoveTweet(tweet.uid)} >\r\n\t\t\t\t\t\t\t<span className='fa fa-retweet'></span>\r\n\t\t\t\t\t\t\t<span className=\"number\">  Delete</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TweetItem;\r\n","import React from 'react';\r\n\r\nimport TweetItem from './TweetItem';\r\n\r\nconst TweetList = ({\r\n\tauthUser,\r\n\ttweets,\r\n\tonReTweet ,\r\n\tonaddFavorite,\r\n\tonReplyTweet,\r\n\tonEditTweet,\r\n\tonRemoveTweet,\r\n}) => (\r\n\t<div className=\"root_listTweet\">\r\n\t\t{tweets.map(tweet => (\r\n\t\t\t<TweetItem\r\n\t\t\tauthUser={authUser}\r\n\t\t\tkey={tweet.uid}\r\n\t\t\ttweet={tweet}\r\n\t\t\tonReTweet ={onReTweet}\r\n\t\t\tonaddFavorite={onaddFavorite}\r\n\t\t\tonReplyTweet={onReplyTweet}\r\n\t\t\tonEditTweet={onEditTweet}\r\n\t\t\tonRemoveTweet={onRemoveTweet}\r\n\t\t\t/>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default TweetList;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass TweetInput extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        const pretext = (this.props.userNameToReply) ?  `@${this.props.userNameToReply} `  : '';\r\n        this.state = {\r\n            text: pretext,\r\n            userNameToReply :'toto',\r\n        }\r\n    };\r\n\r\n    onsubmit = event =>{\r\n        this.props.onCreateTweet(event)\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    onChangeText = event =>\r\n    {\r\n        this.setState({ text: event.target.value });\r\n        this.props.onChangeText(event.target.value);\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const { text, userNameToReply  } = this.state;\r\n        return(\r\n            <form onSubmit={this.onsubmit}>\r\n                <textarea className=\"tweet_text\" \r\n                        name='text'\r\n                        value={text}\r\n                        onChange={this.onChangeText}\r\n                >\r\n                    {(userNameToReply) ? `@${userNameToReply} ` : ''}\r\n                </textarea>\r\n                <div className=\"tweet_button\">\r\n                    <button className=\"tweet_close\" \r\n                            onClick={this.props.onCloseText} >\r\n                        Close\r\n                    </button>\r\n                    <button className=\"tweet_send\" type='submit'> Send </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default  TweetInput;","import React, { Component } from \"react\"\r\nimport { withFirebase } from '../Firebase';\r\nimport TweetList from './TweetList';\r\nimport TweetInput from \"./TweetInput\";\r\n\r\n\r\n\r\nclass TweetPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            text: '',\r\n            loading: false,\r\n            tweets: [],\r\n            limit: 15, \r\n            openText: false,\r\n            userNameToReply: '',\r\n            messages: [],\r\n            isReply : false,\r\n            authUser :  Object.assign({}, props.authUser, { retweets: [] }, { likes: [] }),\r\n        }     \r\n    };\r\n  \r\n    componentDidMount() {\r\n        this.onListenForTweets();\r\n    };\r\n\r\n    onListenForTweets = () => {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.tweets()\r\n            .orderByChild('createdAt')\r\n            .limitToLast(this.state.limit)\r\n            .on('value', snapshot => {\r\n                    const tweetsObject = snapshot.val();\r\n                    if (tweetsObject) {\r\n                        const tweetsList = Object.keys(tweetsObject).map(key => ({\r\n                            ...tweetsObject[key],\r\n                            uid: key,\r\n                        }));\r\n                    \r\n                        this.setState({\r\n                            tweets: tweetsList,\r\n                            loading: false,\r\n                        });\r\n                    } else {\r\n                        this.setState({ tweets: null, loading: false });\r\n                    }\r\n\r\n            });\r\n    };\r\n\r\n\r\n\r\n    renderTweetInput = () => {\r\n        if (this.state.openText) {\r\n            return (\r\n                <TweetInput\r\n                    authUser={this.state.authUser}\r\n                    onChangeText={this.onChangeText}\r\n                    onCreateTweet={this.onCreateTweet}\r\n                    text = {this.state.text}\r\n                    onCloseText={this.onCloseText}\r\n                    userNameToReply = {this.state.userNameToReply}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    onaddFavorite = (tweet) =>{\r\n\r\n        if (this.state.authUser.likes.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        this.state.authUser.likes.push(tweet.uid);\r\n        if(tweet.listFav === undefined)\r\n        {\r\n            tweet.listFav = [];\r\n        }\r\n        tweet.listFav.push({\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n        });\r\n        tweet.like++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n    }\r\n\r\n  \r\n    onReTweet = (tweet) =>{        \r\n        if (this.state.authUser.retweets.filter(rt => rt === tweet.uid).length >0 )\r\n        {\r\n            return;\r\n        }\r\n        this.state.authUser.retweets.push(tweet.uid);\r\n\r\n        if(tweet.listreTweets === undefined)\r\n        {\r\n            tweet.listreTweets = [];\r\n        }\r\n        tweet.listreTweets.push({\r\n            text: this.state.text,\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            like: 0,\r\n            retweets: 0,\r\n        });\r\n        tweet.retweets++;\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweet\r\n        });\r\n\r\n    }\r\n\r\n    onCreateTweet = (event) => {\r\n        this.props.firebase.tweets().push({\r\n            text: this.state.text,\r\n            userId: this.state.authUser.uid,\r\n            username: this.state.authUser.email.split('@')[0],\r\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n            like: 0,\r\n            retweets: 0,\r\n            listreTweets:[],\r\n            listFav:[],\r\n        });\r\n\r\n        this.setState({ text: '', openText: false });\r\n        event.preventDefault();\r\n    };\r\n\r\n    onEditTweet = (tweet, text) => {\r\n        const { uid, ...tweetSnapshot } = tweet;\r\n\r\n        this.props.firebase.tweet(tweet.uid).set({\r\n            ...tweetSnapshot,\r\n            text,\r\n            editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n        });\r\n    };    \r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.tweets().off();\r\n    };\r\n\r\n    onRemoveTweet = uid => {\r\n        this.props.firebase.tweet(uid).remove();\r\n    };\r\n\r\n    onReplyTweet = (userNameToReply) =>{\r\n        this.setState({ \r\n            openText: true,\r\n            userNameToReply\r\n        });\r\n    }\r\n\r\n    onChangeText = value => {\r\n        this.setState({ text: value });\r\n    };\r\n    onOpenText  = event =>{\r\n        event.preventDefault()\r\n        this.setState({ openText: true })\r\n      }\r\n\r\n    render() {\r\n        const { text, tweets, loading, authUser } = this.state;\r\n        return (\r\n                <div>\r\n                    <h2>Actu</h2>\r\n                    {loading && <div>Loading ...</div>}   \r\n                    <button onClick={this.onOpenText} className=\"open_button_tweet\">\r\n                        <span className='fa fa-lg fa-edit'></span> Tweet!\r\n                    </button>\r\n                    {this.renderTweetInput()}\r\n\r\n                    {tweets && (\r\n                        <TweetList\r\n                            authUser={authUser}\r\n                            tweets={tweets}\r\n                            onEditTweet={this.onEditTweet}\r\n                            onRemoveTweet={this.onRemoveTweet}\r\n                            onReTweet ={this.onReTweet}\r\n                            onaddFavorite={this.onaddFavorite}\r\n                            onReplyTweet={this.onReplyTweet}\r\n                        />\r\n                    )}\r\n\r\n                    {!tweets && <div>Aucun tweet trouver ...</div>}\r\n                \r\n\r\n                    \r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default withFirebase(TweetPage) ;\r\n","import TweetPage from './TweetPage';\r\n\r\nexport default TweetPage ;","import React from 'react';\r\nimport TweetPage from '../TweetPage';\r\nimport { compose } from 'recompose';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst HomePage = () => (\r\n\t<div>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser => (\r\n\t\t\t\t<TweetPage authUser={authUser} />\r\n\t\t\t)}\r\n\t\t</AuthUserContext.Consumer>\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n\twithAuthorization(condition),\r\n)(HomePage);\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserItem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\tloading: false,\r\n\t\t\tuser: this.props.providerData[0],\r\n\t\t};   \r\n\t}\r\n\r\n\r\n\tonSendPasswordResetEmail = () => {\r\n\t\tthis.props.firebase.doPasswordReset(this.state.user.email);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { user, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{loading && <div>Loading ...</div>}\r\n\t\t\t\t{user && (\r\n\t\t\t\t\t<div className=\"profil_root\">\r\n\t\t\t\t\t\t<img className=\"profil_avatar\" src={user.src} />\r\n\t\t\t\t\t\t<span className=\"profil_name\"> {user.username}</span>\r\n\t\t\t\t\t\t<ul className=\"profil_data\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span className='fa fa-user'></span> {user.username} sdq\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span className='fa fa-envelope'></span> {user.email}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withFirebase(UserItem);\r\n\r\n\r\n/*\r\n\r\n <div>\r\n\t\t\t<span>\r\n\t\t\t  <strong>ID:</strong> {user.uid}\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t  <strong>E-Mail:</strong> {user.email}\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t  <strong>Username:</strong> {user.username}\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t  <button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tonClick={this.onSendPasswordResetEmail}\r\n\t\t\t  >\r\n\t\t\t\tSend Password Reset\r\n\t\t\t  </button>\r\n\t\t\t</span>\r\n\t\t  </div>*/","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nimport PasswordChangeForm from '../Password/PasswordChange';\r\nimport { UserItem } from '../User';\r\n\r\nconst AccountPage = () => (\r\n    <AuthUserContext.Consumer>\r\n        {authUser => (\r\n            <div>\r\n                <h1>Account: {authUser.email}</h1>\r\n                <UserItem {...authUser}/>\r\n                <PasswordChangeForm />\r\n            </div>\r\n        )}\r\n     </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport {UserList} from '../User';\r\n\r\n\r\nconst ListeAmisPage = () => (\r\n  <AuthUserContext.Consumer>\r\n      \r\n      {authUser => (\r\n            < UserList authUser/>\r\n        )}\r\n  </AuthUserContext.Consumer>\r\n  \r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(ListeAmisPage);","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport SignUpPage from '../Sign/SignUp';\r\nimport SignInPage from '../Sign/SignIn';\r\nimport PasswordForgetPage from '../Password/PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport ListeAmisPage from '../ListeDesAmis';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Header />\r\n      <hr />\r\n\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route path={ROUTES.LISTEAMIS} component={ListeAmisPage} />\r\n      <Route\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nimport App from \"../src/components/App\"\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport 'normalize-css'\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>,\r\n     document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}